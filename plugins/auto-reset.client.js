// –ü–ª–∞–≥–∏–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Å—Ç–µ–Ω–¥–æ–≤ –≤ –ø–æ–ª–Ω–æ—á—å
export default defineNuxtPlugin(() => {
  if (process.client) {
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±—Ä–æ—Å–∞
     */
    const checkAutoReset = async () => {
      try {
        const { useApi } = await import("~/composables/useApi");
        const api = useApi();

        // –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ - –ª–æ–≥–∏–∫–∞ —Å–±—Ä–æ—Å–∞ —É–∂–µ –≤ server/api/stands.get.js
        await api.healthCheck();
      } catch (error) {
        console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±—Ä–æ—Å–∞:", error);
      }
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    const intervalId = setInterval(checkAutoReset, 60000);

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    if (process.client) {
      window.addEventListener("beforeunload", () => {
        clearInterval(intervalId);
      });
    }

    console.log("üïõ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±—Ä–æ—Å —Å—Ç–µ–Ω–¥–æ–≤ –≤ –ø–æ–ª–Ω–æ—á—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
  }
});
